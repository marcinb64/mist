#include "Noise.h"

#include <algorithm>
#include <array>
#include <random>

using namespace mist;

namespace mist
{

static constexpr std::array<int, 512> makeDefaultPermutation()
{
    std::array<int, 512> ret = {
        126, 181, 219, 33,  162, 64,  103, 206, 223, 161, 231, 30,  32,  230, 229, 154, 186, 194,
        168, 61,  14,  44,  239, 41,  139, 195, 245, 145, 53,  157, 5,   122, 228, 35,  39,  227,
        201, 135, 177, 232, 156, 63,  192, 75,  12,  49,  71,  165, 222, 153, 151, 243, 110, 166,
        131, 46,  72,  167, 159, 209, 176, 149, 216, 204, 196, 146, 190, 136, 164, 124, 212, 111,
        60,  86,  120, 202, 79,  7,   15,  172, 140, 93,  101, 36,  123, 185, 42,  34,  224, 104,
        16,  138, 85,  125, 56,  94,  244, 191, 95,  187, 23,  137, 67,  214, 77,  150, 213, 11,
        117, 99,  78,  43,  105, 58,  80,  89,  22,  197, 107, 47,  148, 179, 116, 96,  253, 128,
        199, 203, 0,   121, 234, 171, 40,  248, 218, 252, 163, 25,  160, 52,  3,   237, 90,  200,
        155, 147, 38,  48,  221, 240, 254, 113, 59,  68,  10,  28,  129, 81,  205, 70,  31,  193,
        109, 169, 143, 178, 51,  133, 1,   69,  249, 182, 45,  8,   130, 215, 127, 50,  173, 142,
        88,  114, 112, 20,  132, 236, 66,  74,  87,  26,  82,  18,  207, 100, 13,  233, 54,  65,
        73,  198, 118, 174, 37,  102, 97,  115, 19,  255, 62,  235, 76,  189, 108, 98,  180, 27,
        83,  21,  152, 170, 175, 247, 2,   119, 246, 6,   17,  144, 241, 84,  217, 9,   226, 134,
        251, 183, 106, 158, 92,  238, 250, 24,  141, 57,  208, 225, 188, 55,  29,  4,   211, 184,
        210, 91,  220, 242};

    std::copy_n(ret.data(), 256, ret.data() + 256);

    return ret;
}

static std::array<int, 512> pee = makeDefaultPermutation();

auto setPerlinSeed(long seed) -> void
{
    std::default_random_engine rng {static_cast<long unsigned int>(seed)};

    for (int i = 0; i < 256; ++i)
        pee[i] = i;

    std::shuffle(pee.begin(), pee.begin() + 256, rng);
    std::copy_n(pee.data(), 256, pee.data() + 256);
}

auto perlinHash(int value) -> int
{
    return pee[value];
}

} // namespace mist
